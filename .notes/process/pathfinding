Pathfinding brainstorm:
Predefine tiles on the map as dead ends
If pursuing the player, have the mob move into the adjacent tile that is not in a dead end
PROBLEM: Players could move into dead ends and mobs would not follow
In theory, no mob will have a vision range more than like 3 tiles unless it's a straight line
If the target y-distance is greater, move a space toward it on the y axis
If the target x-distance is greater, move a space toward it on the x axis
If both the x and y distances are equal, move the direction opposite of your last move
Mob pathfinding should prioritize orbs over players

1,1
2,1
3,1
3,2
4,2
5,2
5,3
6,3
7,3



x1 = 1;
y1 = 1;
x2 = 7;
y2 = 3;

var dx = x2 - x1;
var dy = y2 - y1;

// short - long, this will tell us how much to increment the short axis for each +1 on the long axis
var step = 0;
(dx >= dy) ? (step = dy/dx) : (step = dx/dy);

// step values for x and y, current coords
var sx = 0;
var sy = 0;

// cumulative x or y values
var cx = 0;
var cy = 0;

var path = [];

for (sx = 0; sx < dx; sx ++) {
    path.push({
        x: x1+sx, 
        y: y1+sy
    });
    // then if you're also crossing a line, add the other square
    cy += step;
    if (cy >= 1) {
    	cy -= 1;
        // gotta remember this to account for the repetition of the pattern
        cy += step;
		sy += 1;
        path.push({
            x: x1+sx,
            y: y1+sy
        });
    }
    // be sure to add or subtract after doing everything else to prep for the next loop
}
path.push({
		x: x2,
    y: y2
});

for (cnt = 0; cnt < path.length; cnt++) {
console.log(path[cnt]);
}

/*
*
*
* Courtesy Spaces
*
*
*/